
#pragma once

namespace meta
{
	/////////////////////////////////////////////////////////////////////////
	// Type equality
	/////////////////////////////////////////////////////////////////////////

	template<typename A,typename B> struct IsEqual { static const bool value = false; };
	template<typename A> struct IsEqual<A,A> { static const bool value = true; };

	/////////////////////////////////////////////////////////////////////////
	// Static if
	/////////////////////////////////////////////////////////////////////////

	template<bool Condition,typename True,typename False> struct StaticIf;
	template<typename True,typename False> struct StaticIf<true,True,False> { typedef True result; };
	template<typename True,typename False> struct StaticIf<false,True,False> { typedef False result; };

	/////////////////////////////////////////////////////////////////////////
	// Null type
	/////////////////////////////////////////////////////////////////////////

	struct Null { };

}
